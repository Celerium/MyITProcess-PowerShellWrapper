<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="458" errors="0" failures="0" not-run="10" inconclusive="0" ignored="0" skipped="3" invalid="0" date="2023-10-29" time="16:29:39">
  <environment clr-version="4.0.30319.42000" user-domain="BATTLESTATION" cwd="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" machine-name="BATTLESTATION" nunit-version="2.5.8.0" os-version="10.0.22621" user="David" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Ignored" success="True" time="9.1906" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\HelpComment.Tests.ps1" executed="True" result="Ignored" success="True" time="2.2158" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\HelpComment.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ]" executed="True" result="Ignored" success="True" time="0.8743" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Add-MyITProcessAPIKey ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains comment based help" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a synopsis" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a description" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains at least one usage example" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="[ Add-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessAPIKey ] - Parameter has a description - [ Api_Key ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Parameter has a description - [ Api_Key ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0114" asserts="0" description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.0842" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ]">
                    <results>
                      <test-case description="[ Add-MyITProcessBaseURI ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="[ Add-MyITProcessBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessBaseURI ] - Parameter has a description - [ base_uri ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Parameter has a description - [ base_uri ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessBaseURI ] - Parameter has a description - [ data_center ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Parameter has a description - [ data_center ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0177" asserts="0" description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.1157" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ]" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ]">
                    <results>
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ uri_Filter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ uri_Filter ]" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ resource_Uri ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ resource_Uri ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.1494" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains at least one usage example" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a note" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.1785" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ]" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Get-MyITProcessAPIKey ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a description" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="[ Get-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessAPIKey ] - Parameter has a description - [ plainText ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Parameter has a description - [ plainText ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.2097" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ]" executed="True" result="Ignored" success="True" time="0.0275" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ]">
                    <results>
                      <test-case description="[ Get-MyITProcessBaseURI ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a synopsis" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a description" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] - Parameter has a description -" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] - Parameter has a description -" time="0.0032" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.2724" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ]" executed="True" result="Success" success="True" time="0.0591" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ]">
                    <results>
                      <test-case description="[ Get-MyITProcessClients ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains comment based help" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a description" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="[ Get-MyITProcessClients ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_predicate ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_condition ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_condition ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_operator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_operator ]" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ sort_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ sort_field ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ sort_direction ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ sort_direction ]" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ page ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ page ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ pageSize ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ pageSize ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0108" asserts="0" description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.3307" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ]" executed="True" result="Success" success="True" time="0.0548" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ]">
                    <results>
                      <test-case description="[ Get-MyITProcessFindings ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="[ Get-MyITProcessFindings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_condition ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_operator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_field ]" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_direction ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_direction ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ page ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ pageSize ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0105" asserts="0" description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.3891" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ]" executed="True" result="Success" success="True" time="0.0518" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ]">
                    <results>
                      <test-case description="[ Get-MyITProcessInitiatives ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0233" asserts="0" description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_condition ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_operator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_operator ]" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_direction ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ page ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ pageSize ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0105" asserts="0" description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.4487" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ]" executed="True" result="Success" success="True" time="0.0562" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ]">
                    <results>
                      <test-case description="[ Get-MyITProcessMeetings ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a synopsis" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0237" asserts="0" description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_condition ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_operator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_direction ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ page ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ page ]" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ pageSize ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ pageSize ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0107" asserts="0" description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.4871" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.035" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains comment based help" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0064" asserts="0" description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ openConfFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ openConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.5469" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ]" executed="True" result="Success" success="True" time="0.0563" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ]">
                    <results>
                      <test-case description="[ Get-MyITProcessRecommendations ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains at least one usage example" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0241" asserts="0" description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ recommendationId ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ recommendationId ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_predicate ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_condition ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_operator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_direction ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ page ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ pageSize ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0142" asserts="0" description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.6101" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ]" executed="True" result="Success" success="True" time="0.0598" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ]">
                    <results>
                      <test-case description="[ Get-MyITProcessReviews ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="[ Get-MyITProcessReviews ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ overdue_Reviews ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ overdue_Reviews ]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_predicate ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_condition ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_condition ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_operator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_operator ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_direction ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_direction ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ page ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ pageSize ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ pageSize ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.6679" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ]" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ]">
                    <results>
                      <test-case description="[ Get-MyITProcessUsers ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="[ Get-MyITProcessUsers ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_condition ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_operator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_field ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_direction ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ page ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ pageSize ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ pageSize ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0106" asserts="0" description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.7019" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a synopsis" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0052" asserts="0" description="[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.742" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ]">
                    <results>
                      <test-case description="[ Invoke-MyITProcessRequest ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.014" asserts="0" description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ method ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ method ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ resource_Uri ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ resource_Uri ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ uri_Filter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ uri_Filter ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ data ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ data ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ allPages ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ allPages ]" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.772" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ]" executed="True" result="Ignored" success="True" time="0.0266" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a link" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] - Parameter has a description -" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] - Parameter has a description -" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.8023" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ]" executed="True" result="Ignored" success="True" time="0.0268" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ]">
                    <results>
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a link" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] - Parameter has a description -" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] - Parameter has a description -" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.8369" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains at least one usage example" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ AndVariables ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ AndVariables ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.8686" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ]" executed="True" result="Success" success="True" time="0.0283" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Test-MyITProcessAPIKey ] contains comment based help" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a synopsis" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a description" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a note" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a link" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="[ Test-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Test-MyITProcessAPIKey ] - Parameter has a description - [ base_uri ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Parameter has a description - [ base_uri ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\MyITProcessAPI.Tests.ps1" executed="True" result="Success" success="True" time="0.205" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\MyITProcessAPI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.108" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data" executed="True" result="Success" success="True" time="0.0796" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data">
                <results>
                  <test-case description="Manifest [ RootModule ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ RootModule ] has valid data" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ModuleVersion ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ ModuleVersion ] has valid data" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ GUID ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ GUID ] has valid data" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Author ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Author ] has valid data" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CompanyName ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ CompanyName ] has valid data" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Copyright ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Copyright ] has valid data" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Description ] is not empty" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Description ] is not empty" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ PowerShellVersion ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ PowerShellVersion ] has valid data" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ NestedModules ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ NestedModules ] has valid data" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ FunctionsToExport ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ FunctionsToExport ] has valid data" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CmdletsToExport ] is empty" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ CmdletsToExport ] is empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ VariablesToExport ] is empty" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ VariablesToExport ] is empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ AliasesToExport ] has alias" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ AliasesToExport ] has alias" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Tags ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Tags ] has valid data" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ LicenseUri ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ LicenseUri ] has valid data" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ProjectUri ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ ProjectUri ] has valid data" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ IconUri ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ IconUri ] has valid data" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ReleaseNotes ] has valid data" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ ReleaseNotes ] has valid data" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ HelpInfoUri ] is not empty" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ HelpInfoUri ] is not empty" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test" executed="True" result="Success" success="True" time="0.1045" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test">
                <results>
                  <test-case description="Module contains only PowerShell files" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Module contains only PowerShell files" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Module files exist" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Module files exist" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass Test-ModuleManifest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Should pass Test-ModuleManifest" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should import successfully" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Should import successfully" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1" executed="True" result="Success" success="True" time="5.6662" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ]" executed="True" result="Success" success="True" time="5.4574" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="2.9496" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.0714" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0259" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.1132" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.1556" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.1981" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2324" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2759" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.3116" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0319" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.3548" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.3973" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.4404" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.4834" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5277" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5714" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.6166" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.6591" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.7017" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.7445" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.787" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.8337" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.8778" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.9291" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.9729" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.0155" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.0818" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0625" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0625" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1228" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1715" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2147" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2578" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.3014" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.3447" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.3728" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.4144" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.4566" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.5206" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0601" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0601" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.5642" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.606" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.6476" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.6894" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.7343" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.7755" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.8172" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.8591" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.901" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.9425" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.9876" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0291" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0706" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1119" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.154" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1988" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.2401" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.2819" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.3239" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.3664" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.4089" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.4547" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.4972" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.557" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0561" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0561" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.6057" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.6484" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.6907" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.7321" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.7739" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.816" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.8618" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.9045" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.9462" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="5.454" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.0581" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0544" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.106" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.1344" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0244" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.1629" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0245" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.1914" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0245" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.2458" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0505" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0505" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.2798" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.3259" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.355" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.025" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.025" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.3896" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0244" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.4368" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.4702" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5175" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5571" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5983" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.6386" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.6848" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7211" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7493" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0242" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7775" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0242" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8064" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0249" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8425" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8899" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.9164" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0227" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.9536" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0335" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.0004" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.027" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.055" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0241" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.0899" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.1455" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0517" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0517" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.1923" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.221" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0246" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.2496" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0246" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.28" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0264" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.3089" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0248" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.3453" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0326" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.3911" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.4182" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0233" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.4726" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.4992" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.5267" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0235" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.5623" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0251" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.6099" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.643" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0231" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.6912" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7178" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7456" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0239" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7889" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.8269" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.8864" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9131" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9416" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0245" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9705" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0247" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9995" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0249" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.0378" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0343" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.0849" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.1187" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.03" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.166" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.1934" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0234" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.222" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0245" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.2573" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0314" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.3039" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.3303" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0227" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.3636" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4108" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4378" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0232" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4655" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.501" asserts="0" description="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ built ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\build\MyITProcessAPI\2.0.0\MyITProcessAPI.psm1)" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Add-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.0672" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Add-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ built ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.018" asserts="0" description="Testing the [ built ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ built ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions" executed="True" result="Success" success="True" time="0.0144" asserts="0" description="Testing the [ built ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions">
                <results>
                  <test-case description="[ Add-MyITProcessAPIKey ] should have an alias" name="Testing the [ built ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions.[ Add-MyITProcessAPIKey ] should have an alias" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -Api_Key ] should accept a value from the pipeline" name="Testing the [ built ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions.[ -Api_Key ] should accept a value from the pipeline" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -Api_Key ] should accept input" name="Testing the [ built ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions.[ -Api_Key ] should accept input" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Get-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.0673" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Get-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0207" asserts="0" description="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function">
                <results>
                  <test-case description="[ -Api_Key ] should accept input" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.[ -Api_Key ] should accept input" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Pipeline  - [ -Api_Key ] should return a secure string" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.Pipeline  - [ -Api_Key ] should return a secure string" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter - [ -Api_Key ] should return a secure string" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.Parameter - [ -Api_Key ] should return a secure string" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Using [ -plainText ] should return [ -Api_Key ] as a string" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.Using [ -plainText ] should return [ -Api_Key ] as a string" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If [ -Api_Key ] is empty it should throw a warning" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.If [ -Api_Key ] is empty it should throw a warning" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Remove-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.0719" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Remove-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0135" asserts="0" description="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0099" asserts="0" description="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function">
                <results>
                  <test-case description="Running [ Remove-MyITProcessAPIKey ] should remove all apiKey variables" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function.Running [ Remove-MyITProcessAPIKey ] should remove all apiKey variables" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the [ MyITProcess_API_Key ] is already empty a warning should be thrown" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function.If the [ MyITProcess_API_Key ] is already empty a warning should be thrown" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Test-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.137" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Test-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0891" asserts="0" description="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ].[ Test-MyITProcessAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0857" asserts="0" description="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ].[ Test-MyITProcessAPIKey ] testing function">
                <results>
                  <test-case description="[ Test-MyITProcessAPIKey ] with a bad API key should fail to authenticate" name="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ].[ Test-MyITProcessAPIKey ] testing function.[ Test-MyITProcessAPIKey ] with a bad API key should fail to authenticate" time="0.0821" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Add-MyITProcessBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.0837" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Add-MyITProcessBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0339" asserts="0" description="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions">
                <results>
                  <test-case description="[ Add-MyITProcessBaseURI ] should have an alias" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.[ Add-MyITProcessBaseURI ] should have an alias" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Without parameters should return the default URI" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.Without parameters should return the default URI" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should accept a value from the pipeline" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.Should accept a value from the pipeline" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -base_uri  should return what was inputted" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.With parameter -base_uri  should return what was inputted" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -data_center US should return the default URI" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.With parameter -data_center US should return the default URI" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With invalid parameter value -data_center Space should return an error" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.With invalid parameter value -data_center Space should return an error" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.The default URI should NOT contain a trailing forward slash" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.A custom URI should NOT contain a trailing forward slash" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Get-MyITProcessBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.0692" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Get-MyITProcessBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0203" asserts="0" description="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function">
                <results>
                  <test-case description="The default URI should be returned" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.The default URI should be returned" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The URI should be a string" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.The URI should be a string" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.The default URI should NOT contain a trailing forward slash" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.A custom URI should NOT contain a trailing forward slash" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is not set a warning should be thrown" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.If the baseUri is not set a warning should be thrown" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Remove-MyITProcessBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.0645" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Remove-MyITProcessBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0131" asserts="0" description="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0094" asserts="0" description="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function">
                <results>
                  <test-case description="The baseUri variable should not longer exist" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function.The baseUri variable should not longer exist" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is already gone a warning should be thrown" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function.If the baseUri is already gone a warning should be thrown" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Export-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1067" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Export-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0558" asserts="0" description="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="Should export successfully" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function.Should export successfully" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration directory should be hidden" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function.Configuration directory should be hidden" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function.Configuration file should contain required values" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Get-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.0912" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Get-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="Configuration directory should be hidden" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function.Configuration directory should be hidden" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function.Configuration file should contain required values" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Import-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1115" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Import-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0654" asserts="0" description="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.062" asserts="0" description="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should populate baseline variables" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function.No configuration should populate baseline variables" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should contain required variables" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function.Saved configuration session should contain required variables" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should NOT contain temp variables" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function.Saved configuration session should NOT contain temp variables" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Initialize-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.0931" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Initialize-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="When imported WITHOUT a saved configuration baseline variables should exist" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function.When imported WITHOUT a saved configuration baseline variables should exist" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When imported WITh a saved configuration baseline variables should exist" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function.When imported WITh a saved configuration baseline variables should exist" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Remove-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.0762" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Remove-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0286" asserts="0" description="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should throw a warning" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function.No configuration should throw a warning" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration should be removed" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function.Saved configuration should be removed" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration &amp; variables should be removed" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function.Saved configuration &amp; variables should be removed" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>