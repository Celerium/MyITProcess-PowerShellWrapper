<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="1886" errors="0" failures="1" not-run="10" inconclusive="0" ignored="0" skipped="3" invalid="0" date="2023-10-29" time="16:26:49">
  <environment clr-version="4.0.30319.42000" user-domain="BATTLESTATION" cwd="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" machine-name="BATTLESTATION" nunit-version="2.5.8.0" os-version="10.0.22621" user="David" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="66.9046" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\HelpComment.Tests.ps1" executed="True" result="Ignored" success="True" time="2.0219" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\HelpComment.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ]" executed="True" result="Ignored" success="True" time="0.8839" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ]" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Add-MyITProcessAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains comment based help" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a synopsis" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a description" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="[ Add-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessAPIKey ] - Parameter has a description - [ Api_Key ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Parameter has a description - [ Api_Key ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0083" asserts="0" description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessAPIKey ].[ Add-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.0766" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ]">
                    <results>
                      <test-case description="[ Add-MyITProcessBaseURI ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains comment based help" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-MyITProcessBaseURI ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="[ Add-MyITProcessBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessBaseURI ] - Parameter has a description - [ base_uri ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Parameter has a description - [ base_uri ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessBaseURI ] - Parameter has a description - [ data_center ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Parameter has a description - [ data_center ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0113" asserts="0" description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Add-MyITProcessBaseURI ].[ Add-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.1074" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ]" executed="True" result="Success" success="True" time="0.0274" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ]">
                    <results>
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-MyITProcessQueryString ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0076" asserts="0" description="[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ uri_Filter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ uri_Filter ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ resource_Uri ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Parameter has a description - [ resource_Uri ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ ConvertTo-MyITProcessQueryString ].[ ConvertTo-MyITProcessQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.1413" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains at least one usage example" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-MyITProcessModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] contains a link" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Export-MyITProcessModuleSettings ].[ Export-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.1698" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ]" executed="True" result="Success" success="True" time="0.0252" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Get-MyITProcessAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains at least one usage example" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="[ Get-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessAPIKey ] - Parameter has a description - [ plainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Parameter has a description - [ plainText ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessAPIKey ].[ Get-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.1997" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ]" executed="True" result="Ignored" success="True" time="0.0265" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ]">
                    <results>
                      <test-case description="[ Get-MyITProcessBaseURI ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a description" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessBaseURI ] - Parameter has a description -" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] - Parameter has a description -" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessBaseURI ].[ Get-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.2676" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ]" executed="True" result="Success" success="True" time="0.0645" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ]">
                    <results>
                      <test-case description="[ Get-MyITProcessClients ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a synopsis" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains at least one usage example" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessClients ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.02" asserts="0" description="[ Get-MyITProcessClients ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_predicate ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_condition ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_condition ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ filter_operator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ sort_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ sort_direction ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Parameter has a description - [ allPages ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessClients ].[ Get-MyITProcessClients ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.3317" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ]" executed="True" result="Success" success="True" time="0.0608" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ]">
                    <results>
                      <test-case description="[ Get-MyITProcessFindings ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a note" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessFindings ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0191" asserts="0" description="[ Get-MyITProcessFindings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_condition ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_operator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_direction ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0135" asserts="0" description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessFindings ].[ Get-MyITProcessFindings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.3895" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ]" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ]">
                    <results>
                      <test-case description="[ Get-MyITProcessInitiatives ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains at least one usage example" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessInitiatives ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_condition ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_condition ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_operator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_direction ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ pageSize ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Parameter has a description - [ allPages ]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0106" asserts="0" description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessInitiatives ].[ Get-MyITProcessInitiatives ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.4471" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ]" executed="True" result="Success" success="True" time="0.0542" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ]">
                    <results>
                      <test-case description="[ Get-MyITProcessMeetings ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a description" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains at least one usage example" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessMeetings ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_condition ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_operator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_direction ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ pageSize ]" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0106" asserts="0" description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessMeetings ].[ Get-MyITProcessMeetings ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.4857" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a synopsis" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0064" asserts="0" description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ openConfFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Parameter has a description - [ openConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessModuleSettings ].[ Get-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.5452" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ]" executed="True" result="Success" success="True" time="0.056" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ]">
                    <results>
                      <test-case description="[ Get-MyITProcessRecommendations ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains at least one usage example" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessRecommendations ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0246" asserts="0" description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ recommendationId ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ recommendationId ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_predicate ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_condition ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_operator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_field ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_direction ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ pageSize ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0137" asserts="0" description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessRecommendations ].[ Get-MyITProcessRecommendations ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.6085" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ]" executed="True" result="Success" success="True" time="0.0597" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ]">
                    <results>
                      <test-case description="[ Get-MyITProcessReviews ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains comment based help" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains at least one usage example" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessReviews ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0249" asserts="0" description="[ Get-MyITProcessReviews ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ overdue_Reviews ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ overdue_Reviews ]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_condition ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_condition ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_operator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ filter_operator ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_direction ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ sort_direction ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ page ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessReviews ].[ Get-MyITProcessReviews ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.6716" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ]" executed="True" result="Success" success="True" time="0.0595" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ]">
                    <results>
                      <test-case description="[ Get-MyITProcessUsers ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a note" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-MyITProcessUsers ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] contains a link" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0209" asserts="0" description="[ Get-MyITProcessUsers ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_field ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_predicate ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_predicate ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_condition ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_condition ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_operator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ filter_operator ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_field ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_field ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_direction ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ sort_direction ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ pageSize ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Get-MyITProcessUsers ].[ Get-MyITProcessUsers ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.7084" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a note" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-MyITProcessModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] contains a link" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0049" asserts="0" description="[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfFile ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Import-MyITProcessModuleSettings ].[ Import-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.7506" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ]">
                    <results>
                      <test-case description="[ Invoke-MyITProcessRequest ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a description" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains at least one usage example" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-MyITProcessRequest ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0108" asserts="0" description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ method ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ method ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ resource_Uri ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ resource_Uri ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ uri_Filter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ uri_Filter ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ data ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ data ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-MyITProcessRequest ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Invoke-MyITProcessRequest ].[ Invoke-MyITProcessRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.7813" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ]" executed="True" result="Ignored" success="True" time="0.0272" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessAPIKey ] - Parameter has a description -" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] - Parameter has a description -" time="0.0032" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0065" asserts="0" description="[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessAPIKey ].[ Remove-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.8129" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ]" executed="True" result="Ignored" success="True" time="0.0282" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ]">
                    <results>
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains at least one usage example" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessBaseURI ] - Parameter has a description -" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] - Parameter has a description -" time="0.0072" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.003" asserts="0" description="[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessBaseURI ].[ Remove-MyITProcessBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.8479" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ]" executed="True" result="Success" success="True" time="0.0315" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ]">
                    <results>
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-MyITProcessModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] contains a link" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ MyITProcessConfPath ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ AndVariables ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Parameter has a description - [ AndVariables ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0054" asserts="0" description="[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Remove-MyITProcessModuleSettings ].[ Remove-MyITProcessModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests" executed="True" result="Success" success="True" time="0.8806" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ]" executed="True" result="Success" success="True" time="0.0293" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ]">
                    <results>
                      <test-case description="[ Test-MyITProcessAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-MyITProcessAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="[ Test-MyITProcessAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Test-MyITProcessAPIKey ] - Parameter has a description - [ base_uri ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Parameter has a description - [ base_uri ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ HelpComment.Tests.ps1 ].[ MyITProcessAPI ] module help tests.[ Test-MyITProcessAPIKey ].[ Test-MyITProcessAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\MyITProcessAPI.Tests.ps1" executed="True" result="Success" success="True" time="0.1934" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\MyITProcessAPI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0885" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data" executed="True" result="Success" success="True" time="0.0603" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data">
                <results>
                  <test-case description="Manifest [ RootModule ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ RootModule ] has valid data" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ModuleVersion ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ ModuleVersion ] has valid data" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ GUID ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ GUID ] has valid data" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Author ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Author ] has valid data" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CompanyName ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ CompanyName ] has valid data" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Copyright ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Copyright ] has valid data" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Description ] is not empty" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Description ] is not empty" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ PowerShellVersion ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ PowerShellVersion ] has valid data" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ NestedModules ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ NestedModules ] has valid data" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ FunctionsToExport ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ FunctionsToExport ] has valid data" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CmdletsToExport ] is empty" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ CmdletsToExport ] is empty" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ VariablesToExport ] is empty" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ VariablesToExport ] is empty" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ AliasesToExport ] has alias" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ AliasesToExport ] has alias" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Tags ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ Tags ] has valid data" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ LicenseUri ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ LicenseUri ] has valid data" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ProjectUri ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ ProjectUri ] has valid data" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ IconUri ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ IconUri ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ReleaseNotes ] has valid data" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ ReleaseNotes ] has valid data" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ HelpInfoUri ] is not empty" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] general manifest data.Manifest [ HelpInfoUri ] is not empty" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test" executed="True" result="Success" success="True" time="0.0851" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test">
                <results>
                  <test-case description="Module contains only PowerShell files" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Module contains only PowerShell files" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Module files exist" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Module files exist" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass Test-ModuleManifest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Should pass Test-ModuleManifest" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should import successfully" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ MyITProcessAPI.Tests.ps1 ].[ MyITProcessAPI.psd1 ] module import test.Should import successfully" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1" executed="True" result="Failure" success="False" time="62.6562" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ]" executed="True" result="Failure" success="False" time="61.1889" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="2.3101" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0487" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0928" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1178" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1541" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.188" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2344" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2782" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3075" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3496" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3717" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0179" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4113" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0354" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4401" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0251" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4793" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5204" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.56" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.58" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6008" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6209" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6409" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6611" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6819" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7023" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7247" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0177" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7457" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7664" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7864" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8081" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8295" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8572" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0236" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0236" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8964" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9153" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9342" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9574" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0194" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9996" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0475" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.091" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1356" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1581" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1849" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0228" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2231" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2698" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.312" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3547" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3977" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4419" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4872" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5083" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.549" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5754" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6182" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6608" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6914" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7381" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7808" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8247" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8674" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9097" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9521" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9954" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0158" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0589" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0895" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1317" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1745" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1973" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.019" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2351" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.034" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2639" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.025" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.025" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3057" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ ConvertTo-MyITProcessQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\ConvertTo-MyITProcessQueryString.ps1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="5.0981" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.089" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1339" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1824" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2275" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2731" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.318" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3633" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3965" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0294" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.437" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4616" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5059" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5507" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6106" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0561" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0561" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6522" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6736" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0175" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.695" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7175" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7399" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0182" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7623" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0182" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7875" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8145" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8362" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0176" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8575" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8875" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0262" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9321" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9773" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0109" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0559" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1009" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1499" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1914" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2258" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0306" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2714" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3204" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3623" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4068" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.452" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4983" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5427" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5874" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6239" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6689" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7142" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7628" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8075" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8524" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8964" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9425" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9711" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0249" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.016" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0616" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1105" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1562" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2018" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.25" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2947" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3413" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3862" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.4317" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.477" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.5224" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.5708" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6119" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.646" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6908" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7391" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7845" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Invoke-MyITProcessRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiCalls\Invoke-MyITProcessRequest.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="7.5612" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.08" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1225" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.166" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2088" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.252" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2949" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3415" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3842" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4273" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4696" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5124" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5543" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6162" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0547" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0547" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6564" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6758" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6946" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7133" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7321" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7511" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7702" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.789" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8078" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8268" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8459" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8646" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8834" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9025" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9214" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9404" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.959" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.978" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9965" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0153" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0345" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0732" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.116" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1581" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2008" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2468" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2891" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3317" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.374" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.417" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4605" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5072" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5494" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5903" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6334" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6762" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.722" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7644" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8072" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8496" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.893" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9361" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9818" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0246" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0672" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.11" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1532" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2005" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2428" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2852" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3278" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3705" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4127" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4593" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Add-MyITProcessAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="10.0521" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0859" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.128" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1715" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2177" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2611" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3038" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3469" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3904" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4328" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4591" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5021" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5449" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.605" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0562" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0562" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6507" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6775" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0228" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.697" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7165" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7376" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7598" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7845" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0192" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8067" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8286" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0176" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8494" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8706" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8914" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9118" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9325" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9536" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9748" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9968" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0168" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0361" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0554" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0855" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0261" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.128" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1723" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2155" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2589" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3052" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3483" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.391" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4344" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.477" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5109" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.554" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5955" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.638" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6852" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7248" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7729" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8165" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8601" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9034" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9471" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.973" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0149" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0572" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0999" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1426" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1866" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2293" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2759" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3185" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3612" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4025" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4449" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4874" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Get-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="12.7517" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0885" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1317" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1758" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2198" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2635" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3099" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3527" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3955" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.438" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4803" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5264" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5697" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6303" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0569" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0569" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6703" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6893" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7085" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7278" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7471" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7662" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7855" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8051" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8247" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8435" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8628" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8885" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9313" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9743" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0169" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0598" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1059" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1488" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1915" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2339" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2762" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3238" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3671" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4106" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4525" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4962" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5434" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5863" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6302" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6729" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7155" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7575" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8035" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8458" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8886" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9317" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9748" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0215" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.065" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1082" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1513" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1942" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2365" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2829" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3257" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.368" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4116" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4539" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4797" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5223" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5648" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6074" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6502" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6962" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Remove-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="15.5603" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0812" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1235" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2105" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2413" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.027" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2845" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3275" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3703" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4166" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.458" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5011" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5439" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6042" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0566" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0566" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6444" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6641" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6833" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7024" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7219" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.741" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7899" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8332" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8764" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9196" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9629" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9887" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0312" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0731" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1156" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1583" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.201" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2436" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2889" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3314" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.373" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4152" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4577" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5033" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5447" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5874" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6291" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6718" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7145" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7613" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8032" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8461" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8884" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9303" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9726" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0186" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0605" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.103" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1461" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1911" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2329" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2782" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3207" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3674" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4101" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4538" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4971" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.54" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5861" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6278" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6703" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7132" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7581" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8048" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Test-MyITProcessAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\apiKeys\Test-MyITProcessAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="18.339" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0859" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1282" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1714" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2178" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.261" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3044" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3477" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3903" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4381" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4818" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5272" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5719" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7659" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.1899" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.1899" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8061" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8255" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8442" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8624" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8809" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8992" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9175" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9379" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9634" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0208" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9833" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0037" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0232" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0446" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0721" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1244" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1664" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2084" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2503" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.292" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3346" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3633" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0248" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4057" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4488" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4914" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5339" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5824" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6252" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6684" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7119" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7546" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7971" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8429" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8849" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9271" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9692" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0115" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0546" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0798" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1223" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1711" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2139" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2568" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3022" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3462" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3886" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4315" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4771" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5194" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5616" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6038" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6461" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6884" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7331" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7752" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Add-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Add-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="20.8168" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0842" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1291" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.171" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2144" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2564" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2989" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3412" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3669" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0208" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4098" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4538" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4956" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5407" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5979" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0532" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0532" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6383" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6572" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6766" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6951" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7138" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7324" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7517" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7707" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7895" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.808" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8275" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8461" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8651" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8842" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9032" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9222" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9407" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9593" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.978" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0281" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0694" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1107" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1533" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1954" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2407" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2826" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3244" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4086" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4507" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4952" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5369" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5792" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6213" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6627" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.705" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7497" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7914" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8336" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8755" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9191" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9614" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0058" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0477" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0899" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1315" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1737" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2202" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2619" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3042" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3458" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3879" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4294" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4743" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Get-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="23.6105" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0839" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.126" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1682" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2132" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2549" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.297" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3395" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3814" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.427" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4657" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5102" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5521" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6091" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0533" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6487" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0358" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6676" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6867" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7054" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7243" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7629" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0348" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8088" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8513" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8939" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9361" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9783" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0202" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0448" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0856" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1278" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1699" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2116" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2561" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2979" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3395" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3816" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4237" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4688" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5112" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5546" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.597" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6386" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6806" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7255" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.768" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8106" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8518" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.894" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9385" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9806" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0231" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0651" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.107" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1492" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1955" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2377" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2805" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3224" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3645" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4096" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4517" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.494" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5358" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5778" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6191" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.664" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7062" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7481" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7902" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\baseUri\Remove-MyITProcessBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="26.4837" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0852" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1288" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1701" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2113" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2525" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2936" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3386" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3799" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4214" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4626" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5041" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5454" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6025" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0532" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0532" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.642" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0354" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6881" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7308" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7722" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8135" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8585" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9006" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.943" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9824" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0356" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0247" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0672" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1092" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1514" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1835" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2267" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.269" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3144" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3562" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3985" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4404" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4827" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5285" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5673" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6018" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0306" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6443" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6901" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7322" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0354" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7744" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8172" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8594" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9025" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9481" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9904" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0332" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0754" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1165" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1621" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2043" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2464" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2887" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3318" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3594" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.024" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4017" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4399" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0344" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4824" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5251" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5676" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.613" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6548" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6969" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7397" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7822" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8272" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8698" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Export-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Export-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="29.0735" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0842" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1299" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1719" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2143" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.254" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.036" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2963" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3381" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3803" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4258" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4678" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5107" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5526" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6107" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0542" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0542" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6503" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0356" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6698" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6888" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7074" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7264" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7456" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7647" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7839" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8029" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8217" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.841" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8597" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8788" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8978" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9413" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9861" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0233" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0332" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0578" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0991" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1452" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1877" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2295" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2713" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3137" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3561" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4013" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4431" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4854" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5282" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5703" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6161" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6582" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7004" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7421" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.784" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8267" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.872" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9111" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9562" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9986" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.041" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0831" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1254" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.171" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2092" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0343" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2456" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0326" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2909" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3324" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.375" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4167" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4585" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5029" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5444" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5864" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Get-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="31.4965" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0849" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1297" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1721" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2142" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2563" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.299" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3444" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3868" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.428" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4705" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5132" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5469" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6044" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0537" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0537" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6492" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6725" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6916" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7103" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7295" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7487" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7678" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.787" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8062" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8252" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8448" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8635" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8822" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9014" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9208" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9399" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9587" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9774" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9966" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0157" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0439" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0859" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1277" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.17" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2125" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2576" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2997" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3421" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3849" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4269" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4693" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5146" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5564" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5987" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6412" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6728" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.028" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7155" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7577" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8001" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8457" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8879" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9308" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9737" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0166" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0527" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0952" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1243" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0255" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1658" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2076" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2488" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2905" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3361" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3782" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4196" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Import-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Import-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="34.3665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0848" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1115" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0231" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1537" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1961" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2384" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2807" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3243" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3649" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4062" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4488" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4904" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5313" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5761" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.618" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6603" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7018" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7438" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7889" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8306" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8722" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9138" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9559" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.001" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0427" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0845" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1261" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1689" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2119" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.257" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2987" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3407" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3827" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.424" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4693" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5115" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5536" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5963" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6384" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.684" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7252" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7671" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.809" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.851" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9007" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9434" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9859" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0279" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0703" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1161" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1585" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2007" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2436" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2862" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3289" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3743" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4171" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4588" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5006" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5433" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5685" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.61" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6522" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6947" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7375" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7829" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8245" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Initialize-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Initialize-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="36.9572" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0853" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1267" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1717" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2135" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2561" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2989" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3419" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3878" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4306" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4726" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5149" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5584" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6163" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.054" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.054" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.657" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.676" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6993" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0194" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7377" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7559" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0144" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7734" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0139" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7915" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0143" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8105" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8294" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8483" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8677" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8863" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9053" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9249" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9445" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9703" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0127" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0549" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0978" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1394" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1848" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2271" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2691" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3113" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3528" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3986" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4408" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4833" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5258" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5688" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6139" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6561" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6982" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7403" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7827" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8254" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8666" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9127" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9552" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9977" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0411" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0847" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1294" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1726" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2153" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.258" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3008" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3294" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0249" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3714" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4143" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4566" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4994" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5447" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5873" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Remove-MyITProcessModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Private\moduleSettings\Remove-MyITProcessModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="39.4522" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.077" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.1191" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.1614" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.2037" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.2455" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.2911" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.3332" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.3751" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.418" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.4611" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.5034" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.5488" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.607" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0544" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.6467" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0358" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.6662" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.6856" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.7045" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.7238" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.743" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.7627" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.7818" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.8011" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.8199" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.8395" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.8583" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.8774" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.8963" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.916" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.9393" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.9779" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="0.9956" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0141" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.0209" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0216" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.0683" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.1103" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.1527" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.1976" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.2396" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.2816" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.3239" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.366" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.4113" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.4538" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.4972" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.5406" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.5828" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.6286" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.6706" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.7123" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.7548" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.7977" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.8433" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.886" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.9285" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="1.9711" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.0135" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.056" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.0793" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0194" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.1217" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.1641" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.2069" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.253" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.2941" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.3363" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.379" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.4215" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.4499" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0247" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]" executed="True" result="Success" success="True" time="2.4915" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessClients.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessClients.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="42.3174" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.0847" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.1095" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0202" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.1549" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.1974" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.24" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.2822" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.3259" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.3505" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0206" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.3933" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.4288" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0282" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.4712" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.5093" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0344" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.5663" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0531" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0531" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.6122" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.654" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.696" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.7381" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.7806" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.8249" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.867" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.9093" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.9518" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="0.9945" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.0397" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.0818" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.125" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.1665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.2087" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.2549" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.2968" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.3389" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.3809" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.4233" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.4685" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.5095" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.5513" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.5944" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.6365" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.6825" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.7236" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.7659" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.809" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.8516" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.8978" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.9397" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0351" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="1.9816" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.0238" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.0658" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.1084" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.1532" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.1951" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.2374" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.28" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.3225" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.3682" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.4104" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.4525" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.4955" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.5381" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.5808" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.6262" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.668" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.7101" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.7524" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.7947" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.8199" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]" executed="True" result="Success" success="True" time="2.8617" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessFindings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessFindings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="44.74" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.0854" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.112" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.1538" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.1965" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.2387" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.281" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.3226" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.3487" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.3934" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.4342" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.4773" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.5197" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.5777" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0542" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0542" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.6216" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.6446" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.019" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.6638" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.6829" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.7022" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.7211" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.7407" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.7601" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.7794" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.7984" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.8177" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.8369" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.8562" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.8753" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.8946" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.9141" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.9331" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.9521" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.9709" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="0.9906" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.0099" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.0616" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.1033" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.146" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.1884" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.2339" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.2761" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.3188" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.3616" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.4043" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.4499" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.4925" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.5356" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.5779" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.6205" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.6667" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.7091" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.751" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.7938" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.8267" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0292" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.8695" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.9124" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="1.9551" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.0008" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.0434" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.0868" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.1291" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.172" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.2157" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.247" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0275" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.2893" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.3317" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.3746" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]" executed="True" result="Success" success="True" time="2.4163" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessInitiatives.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessInitiatives.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="47.4455" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.085" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.1272" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.1699" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.1989" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.2417" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.2844" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.3258" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.3693" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.3979" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0247" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.4407" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.4834" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.5261" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.5844" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0543" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.6253" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.6445" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.6636" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.683" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.7022" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.7214" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.7408" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.7659" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.8081" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.8503" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.8931" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.9356" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="0.9807" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.023" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.0652" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.108" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.1506" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.1929" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.2371" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.2798" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.3222" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.3646" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.4071" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.4531" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.4953" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.5378" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.5799" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.6223" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.6513" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.6938" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.7377" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.7809" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.8272" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.8701" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.9122" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.9552" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="1.9975" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.0402" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.0864" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.1292" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.1723" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.2153" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.2455" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0265" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0265" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.2875" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.3302" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.373" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.4036" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.4456" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.4878" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.5302" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.5724" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.6178" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.6599" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]" executed="True" result="Success" success="True" time="2.702" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessMeetings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessMeetings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="49.8718" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.0708" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0207" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0207" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.1134" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.1563" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.1989" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.242" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.2855" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.3095" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.02" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.3519" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.3945" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.4373" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.4796" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.5228" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.5813" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0548" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0548" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.6261" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.6496" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0192" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.6692" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.6883" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.7078" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.7274" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.7472" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.767" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.7867" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.8063" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.8261" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.8455" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.8652" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.8853" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.9049" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.9244" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.9433" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.9626" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="0.9816" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.0009" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.0304" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0256" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.0721" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.1145" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.1574" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.2031" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.2457" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.288" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.331" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.3739" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.4199" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.4634" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.5059" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.549" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.5914" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.6373" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.68" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.7227" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.7656" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.7935" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0241" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.8399" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.8835" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.9264" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="1.9687" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.0122" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.0369" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0208" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.0762" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0356" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.1231" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.1658" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.2085" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.2511" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.2937" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.3391" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.3803" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]" executed="True" result="Success" success="True" time="2.4228" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessRecommendations.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessRecommendations.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="52.617" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.086" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.1289" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.1526" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.1949" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.2374" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.2794" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.3118" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.354" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.3967" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.4394" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.4823" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.5248" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.5837" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0549" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0549" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.6249" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.6443" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.6683" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0202" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.7099" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.7527" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.795" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.8378" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.8837" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.9263" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="0.9686" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.0113" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.0546" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.0824" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0203" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.1239" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.1665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.2092" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.2514" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.2968" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.3394" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.382" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.4243" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.4665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.5122" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.5507" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0348" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.5967" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.6399" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.6818" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.7246" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.7669" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.7957" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.8388" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.8858" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.9287" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="1.9711" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.0143" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.0384" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0202" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.082" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.1251" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.1678" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.2112" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.255" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.2774" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.3238" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.3665" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.409" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.4519" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.4954" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.517" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0177" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.54" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0191" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.5814" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.6235" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.6569" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.6993" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]" executed="True" result="Success" success="True" time="2.7418" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessReviews.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessReviews.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="55.3331" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.0808" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.1228" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.1685" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.2099" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.2528" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.2898" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.332" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.3747" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.4177" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.4603" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.5063" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.5486" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.6068" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0545" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0545" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.6471" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.6661" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.6854" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.7044" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.7235" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.7422" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.7667" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.809" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.8516" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.8944" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.9364" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="0.9793" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.0075" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0244" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.0494" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.0919" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.1342" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.1796" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.2185" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0351" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.2625" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.3056" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.3485" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.3906" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.4328" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.4578" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.4999" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.5358" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.5779" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.6204" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.6627" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.7052" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.7505" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.7929" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.8348" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.8772" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.9088" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0278" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0278" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.9518" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="1.9941" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.036" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.0787" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.1238" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.166" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.209" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.2514" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.2949" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.3414" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.3837" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.4268" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.4691" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.511" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.5536" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.5831" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.6251" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.6673" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]" executed="True" result="Success" success="True" time="2.7127" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ Get-MyITProcessUsers.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\Public\Get-MyITProcessUsers.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Failure" success="False" time="58.3363" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.0843" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.1265" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.1691" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2141" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2564" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2988" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.3353" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.3771" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.4193" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.4618" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5042" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5491" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5912" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.6329" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.6754" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.7179" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.7631" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.8053" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.8472" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.8897" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.9322" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="0.9774" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.0191" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.0864" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0636" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0636" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1312" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1736" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2164" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2591" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2999" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.3459" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.3885" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.4307" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.473" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.5409" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0641" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0641" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.5846" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.6268" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.6692" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.7119" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.758" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.8003" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.8422" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.8843" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.9269" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="1.9694" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0148" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0567" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0987" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1409" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1835" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.2285" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.2704" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.3127" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.3558" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.3985" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.4412" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.4869" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.5265" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0356" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Failure" success="False" time="2.6117" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Failure" success="False" time="0.0809" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0809" asserts="0" success="False" result="Failure" executed="True">
                            <failure>
                              <message>[0] Expected 0, but got 2.
[1] Expected 'MyITProcessAPI.psd1 - 103', but got 103.
[2] Expected strings to be the same, but they were different.
Expected length: 25
Actual length:   94
Strings differ at index 0.
Expected: 'MyITProcessAPI.psd1 - 103'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for FunctionsToExport.  '
           ^
[3] Expected 'MyITProcessAPI.psd1 - 112', but got 112.
[4] Expected strings to be the same, but they were different.
Expected length: 25
Actual length:   92
Strings differ at index 0.
Expected: 'MyITProcessAPI.psd1 - 112'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for AliasesToExport.  '
           ^</message>
                              <stack-trace>[0] at ($invoke_Results | Measure-Object).Count | Should -Be 0, C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
[1] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[2] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
[3] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[4] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156</stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.66" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.7025" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.7449" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.7865" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.8316" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.8735" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.9154" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.9575" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]" executed="True" result="Success" success="True" time="2.9997" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="61.1845" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.0876" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.1289" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.1708" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.2128" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.2582" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.3001" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.3421" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.3844" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.4261" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.4668" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5113" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5529" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5947" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.6366" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.6783" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7231" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7641" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8059" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8483" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8902" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.9322" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="0.9777" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.0193" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.0613" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.103" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.1451" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.1869" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.2312" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.2728" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.3143" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.356" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.3969" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.439" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.464" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.5053" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.5462" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.5877" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.6296" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.6743" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7158" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7578" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7997" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.8416" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.8878" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9297" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9713" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.0129" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.0546" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.0966" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.1222" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.1639" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.2056" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.2478" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.2898" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.3351" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.3766" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4184" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4605" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.5026" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.549" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.5906" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.6326" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.6748" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.7165" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.7582" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.8032" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]" executed="True" result="Success" success="True" time="2.8448" asserts="0" description="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ MyITProcessAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ MyITProcessAPI ] module PSScriptAnalyzer tests.[ MyITProcessAPI.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\MyITProcessAPI\MyITProcessAPI.psm1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Add-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.126" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Add-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="Testing the [ notbuilt ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions" executed="True" result="Success" success="True" time="0.0191" asserts="0" description="Testing the [ notbuilt ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions">
                <results>
                  <test-case description="[ Add-MyITProcessAPIKey ] should have an alias" name="Testing the [ notbuilt ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions.[ Add-MyITProcessAPIKey ] should have an alias" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -Api_Key ] should accept a value from the pipeline" name="Testing the [ notbuilt ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions.[ -Api_Key ] should accept a value from the pipeline" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -Api_Key ] should accept input" name="Testing the [ notbuilt ] version of [ Add-MyITProcessAPIKey ] functions with [ Add-MyITProcessAPIKey.Tests.ps1 ].[ Add-MyITProcessAPIKey ] testing functions.[ -Api_Key ] should accept input" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Get-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.126" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Get-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0279" asserts="0" description="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0244" asserts="0" description="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function">
                <results>
                  <test-case description="[ -Api_Key ] should accept input" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.[ -Api_Key ] should accept input" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Pipeline  - [ -Api_Key ] should return a secure string" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.Pipeline  - [ -Api_Key ] should return a secure string" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter - [ -Api_Key ] should return a secure string" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.Parameter - [ -Api_Key ] should return a secure string" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Using [ -plainText ] should return [ -Api_Key ] as a string" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.Using [ -plainText ] should return [ -Api_Key ] as a string" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If [ -Api_Key ] is empty it should throw a warning" name="Testing [ Get-MyITProcessAPIKey ] function with [ Get-MyITProcessAPIKey.Tests.ps1 ].[ Get-MyITProcessAPIKey ] testing function.If [ -Api_Key ] is empty it should throw a warning" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Remove-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1053" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Remove-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0126" asserts="0" description="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function">
                <results>
                  <test-case description="Running [ Remove-MyITProcessAPIKey ] should remove all apiKey variables" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function.Running [ Remove-MyITProcessAPIKey ] should remove all apiKey variables" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the [ MyITProcess_API_Key ] is already empty a warning should be thrown" name="Testing [ Remove-MyITProcessAPIKey ] function with [ Remove-MyITProcessAPIKey.Tests.ps1 ].[ Remove-MyITProcessAPIKey ] testing function.If the [ MyITProcess_API_Key ] is already empty a warning should be thrown" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Test-MyITProcessAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.3803" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\apiKeys\Test-MyITProcessAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.2902" asserts="0" description="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ].[ Test-MyITProcessAPIKey ] testing function" executed="True" result="Success" success="True" time="0.2867" asserts="0" description="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ].[ Test-MyITProcessAPIKey ] testing function">
                <results>
                  <test-case description="[ Test-MyITProcessAPIKey ] with a bad API key should fail to authenticate" name="Testing [ Test-MyITProcessAPIKey ] function with [ Test-MyITProcessAPIKey.Tests.ps1 ].[ Test-MyITProcessAPIKey ] testing function.[ Test-MyITProcessAPIKey ] with a bad API key should fail to authenticate" time="0.28" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Add-MyITProcessBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1304" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Add-MyITProcessBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions" executed="True" result="Success" success="True" time="0.0295" asserts="0" description="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions">
                <results>
                  <test-case description="[ Add-MyITProcessBaseURI ] should have an alias" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.[ Add-MyITProcessBaseURI ] should have an alias" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Without parameters should return the default URI" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.Without parameters should return the default URI" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should accept a value from the pipeline" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.Should accept a value from the pipeline" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -base_uri  should return what was inputted" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.With parameter -base_uri  should return what was inputted" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -data_center US should return the default URI" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.With parameter -data_center US should return the default URI" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With invalid parameter value -data_center Space should return an error" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.With invalid parameter value -data_center Space should return an error" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.The default URI should NOT contain a trailing forward slash" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Add-MyITProcessBaseURI ] functions with [ Add-MyITProcessBaseURI.Tests.ps1 ].[ Add-MyITProcessBaseURI ] testing functions.A custom URI should NOT contain a trailing forward slash" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Get-MyITProcessBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1533" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Get-MyITProcessBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0308" asserts="0" description="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function">
                <results>
                  <test-case description="The default URI should be returned" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.The default URI should be returned" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The URI should be a string" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.The URI should be a string" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.The default URI should NOT contain a trailing forward slash" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.A custom URI should NOT contain a trailing forward slash" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is not set a warning should be thrown" name="Testing [ Get-MyITProcessBaseURI ] function with [ Get-MyITProcessBaseURI.Tests.ps1 ].[ Get-MyITProcessBaseURI ] testing function.If the baseUri is not set a warning should be thrown" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Remove-MyITProcessBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.109" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\baseUri\Remove-MyITProcessBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0125" asserts="0" description="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0089" asserts="0" description="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function">
                <results>
                  <test-case description="The baseUri variable should not longer exist" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function.The baseUri variable should not longer exist" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is already gone a warning should be thrown" name="Testing [ Remove-MyITProcessBaseURI ] function with [ Remove-MyITProcessBaseURI.Tests.ps1 ].[ Remove-MyITProcessBaseURI ] testing function.If the baseUri is already gone a warning should be thrown" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Export-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1431" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Export-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0483" asserts="0" description="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="Should export successfully" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function.Should export successfully" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration directory should be hidden" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function.Configuration directory should be hidden" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Export-MyITProcessModuleSettings ] function with [ Export-MyITProcessModuleSettings.Tests.ps1 ].[ Export-MyITProcessModuleSettings ] testing function.Configuration file should contain required values" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Get-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1344" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Get-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0335" asserts="0" description="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="Configuration directory should be hidden" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function.Configuration directory should be hidden" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Get-MyITProcessModuleSettings ] function with [ Get-MyITProcessModuleSettings.Tests.ps1 ].[ Get-MyITProcessModuleSettings ] testing function.Configuration file should contain required values" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Import-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1667" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Import-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0667" asserts="0" description="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0599" asserts="0" description="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should populate baseline variables" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function.No configuration should populate baseline variables" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should contain required variables" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function.Saved configuration session should contain required variables" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should NOT contain temp variables" name="Testing [ Import-MyITProcessModuleSettings ] function with [ Import-MyITProcessModuleSettings.Tests.ps1 ].[ Import-MyITProcessModuleSettings ] testing function.Saved configuration session should NOT contain temp variables" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Initialize-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2767" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Initialize-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.18" asserts="0" description="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.1763" asserts="0" description="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="When imported WITHOUT a saved configuration baseline variables should exist" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function.When imported WITHOUT a saved configuration baseline variables should exist" time="0.0593" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When imported WITh a saved configuration baseline variables should exist" name="Testing [ Initialize-MyITProcessModuleSettings ] function with [ Initialize-MyITProcessModuleSettings.Tests.ps1 ].[ Initialize-MyITProcessModuleSettings ] testing function.When imported WITh a saved configuration baseline variables should exist" time="0.1133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Remove-MyITProcessModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1228" asserts="0" description="C:\Celerium\Projects\_API\MyITProcess-PowerShellWrapper\tests\Private\moduleSettings\Remove-MyITProcessModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should throw a warning" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function.No configuration should throw a warning" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration should be removed" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function.Saved configuration should be removed" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration &amp; variables should be removed" name="Testing [ Remove-MyITProcessModuleSettings ] function with [ Remove-MyITProcessModuleSettings.Tests.ps1 ].[ Remove-MyITProcessModuleSettings ] testing function.Saved configuration &amp; variables should be removed" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>